# M5NR update (version X):

X=[version number]
BIN=[dir with build scripts]
DIR=[dir for downloads / tmp files]

### download ###
mkdir $DIR/tmp
mkdir $DIR/m5nr.$X
cd $DIR/m5nr.$X
mkdir raw
mkdir parsed

$BIN/download_m5nr_sources.sh raw

### database ###
psql -d template1 -c "CREATE DATABASE m5nr_v$X"
psql -d m5nr_v$X -f $BIN/create_pg_tables.sql

### protein ###
source2ach.sh <some argument to be defined later>


cd parsed
$BIN/load_md5protein2db.pl --verbose --index --dbname m5nr_v$X --tmp_dir $DIR/tmp --datafile IMG/IMG.md52id2func --datafile InterPro/InterPro.md52id2func --datafile KEGG/KEGG.md52id2func --datafile NCBI/GenBank.md52id2func --datafile NCBI/RefSeq.md52id2func --datafile PATRIC/PATRIC.md52id2func --datafile Phantome/Phantome.md52id2func --datafile SEED/SEED.md52id2func --datafile UniProt/SwissProt.md52id2func --datafile UniProt/TrEMBL.md52id2func --aliasfile KEGG/KEGG.id2xref --aliasfile NCBI/GenBank.id2xref --aliasfile NCBI/RefSeq.id2xref --aliasfile UniProt/SwissProt.id2xref --aliasfile UniProt/TrEMBL.id2xref

### create nr ###
cat */*.md52seq | sort -u > all.md52seq
while read md5 seq ; do echo ">"$md5 ; echo $seq ; done < all.md52seq

# while read line; do md5=`echo $line` | cut -f1; seq=`echo $line` | cut -f2; echo ">$md5\n$seq\n"; done < all.md52seq > m5nr.fasta



### stats ###
$BIN/load_stats.pl --dbname m5nr_v$X
